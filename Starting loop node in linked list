//same as Floyd's algoritm
//can also be done by hashmap but space complexity O(N)
//https://www.youtube.com/watch?v=jcZtMh_jov0

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode *slow=head;
        ListNode *fast=head;
        
        while(fast!=NULL && fast->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
            if(fast==slow){
                slow=head;
                while(slow!=fast){
                    slow=slow->next;
                   fast=fast->next;
                }
                return slow;
            }
        }
        return NULL;
    }
};
